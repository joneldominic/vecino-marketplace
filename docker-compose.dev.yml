version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:6.0
    container_name: vecino-mongodb-dev
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=vecino-marketplace
    networks:
      - vecino-network
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7.0-alpine
    container_name: vecino-redis-dev
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - vecino-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend service (development)
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    container_name: vecino-backend-dev
    restart: unless-stopped
    ports:
      - '4000:4000'
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - /app/backend/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: .env
    networks:
      - vecino-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Frontend service (development)
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: vecino-frontend-dev
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - /app/frontend/node_modules
    env_file: .env
    networks:
      - vecino-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  vecino-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
